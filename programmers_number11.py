ingredient=[1,2,3,4,5,6]

for n in ingredient:  #ingredient자리에는 즉 for문에 범위를 결정하는 자리에는 (int,str,list,tuple)자료형이 그냥 들어갈수있다.
    print(n)


for k in ingredient[3]: #이렇게 for문에 ingredient의 특정한 범위를 k의 값에 주기위해서는 str자료형이 여야 된다.
    print(k) #TypeError: 'int' object is not iterable에 에러가 발생한다.

for k in str(ingredient[3]):
    print(k) # 4라는 문자열4가 나오게 된다. 여기서 int값으로 출력하려면
    print(int(K)) #이렇게 작성하면 된다.



# 햄버거 가게에서 일을 하는 상수는 햄버거를 포장하는 일을 합니다. 
# 함께 일을 하는 다른 직원들이 햄버거에 들어갈 재료를 조리해 주면 조리된 순서대로 상수의 앞에 아래서부터 위로 쌓이게 되고, 
# 상수는 순서에 맞게 쌓여서 완성된 햄버거를 따로 옮겨 포장을 하게 됩니다. 
# 상수가 일하는 가게는 정해진 순서(아래서부터, 빵 – 야채 – 고기 - 빵)로 쌓인 햄버거만 포장을 합니다. 
# 상수는 손이 굉장히 빠르기 때문에 상수가 포장하는 동안 속 재료가 추가적으로 들어오는 일은 없으며, 
# 재료의 높이는 무시하여 재료가 높이 쌓여서 일이 힘들어지는 경우는 없습니다.
# 예를 들어, 상수의 앞에 쌓이는 재료의 순서가 [야채, 빵, 빵, 야채, 고기, 빵, 야채, 고기, 빵]일 때, 
# 상수는 여섯 번째 재료가 쌓였을 때, 세 번째 재료부터 여섯 번째 재료를 이용하여 햄버거를 포장하고, 아홉 번째 재료가 쌓였을 때, 
# 두 번째 재료와 일곱 번째 재료부터 아홉 번째 재료를 이용하여 햄버거를 포장합니다. 즉, 2개의 햄버거를 포장하게 됩니다.
# 상수에게 전해지는 재료의 정보를 나타내는 정수 배열 ingredient가 주어졌을 때, 
# 상수가 포장하는 햄버거의 개수를 return 하도록 solution 함수를 완성하시오.

#또 다른 깨달음을 주었다.
    
def solution(ingredient):
    answer = 0
    ingredient_list=[]
    for i in ingredient:
        ingredient_list.append(i)
        
        if ingredient_list[-4:]==[1,2,3,1]: # [1,2,3,1]즉 빵-야채-고기-빵의 순서대로 들어와야 햄버거를 하나 만들수 있다.
            del ingredient_list[-4:]        # 여기서 가장 키포인트는 뒤에서부터 범위를 잡아서 센다는 것이다. 매우중요!!!
            answer+=1                       # 내가 처음풀때 1다음에 2다음에 3다음에 1이 연속적으로 들어와야만 햄버거를 만들수 있다 생각해서
                                            # 계속 1다음에 연속으로2,3,1이 들어올 조건만을 생각했다. 이러니 조건을 만들수가 없었다.
                                            # 다음에 이런문제를 풀때 정해져 있는 순서에 조건이 들어와야만 결과값이 나오는 문제는
                                            # 뒤에서부터 범위를 잡는 생각을 해보자!!!  

        
    return answer